dailykos=read.csv("dailykos.csv")
str(dailykos)
dailykos$Document=NULL
dailykos=read.csv("dailykos.csv")
distances=dist(dailykos[2:1546],method="euclidean")
Clusterdailykos=hclust(distances,method="ward")
plot(Clusterdailykos)
clusterGroups=cutree(Clusterdailykos,k=7)
cluster1=subset(Clusterdailykos,clusterGroups==2)
cluster1=subset(dailykos,clusterGroups==2)
cluster1=subset(dailykos,clusterGroups==1)
cluster2=subset(dailykos,clusterGroups==2)
cluster3=subset(dailykos,clusterGroups==3)
cluster4=subset(dailykos,clusterGroups==4)
cluster5=subset(dailykos,clusterGroups==5)
cluster6=subset(dailykos,clusterGroups==6)
cluster7=subset(dailykos,clusterGroups==7)
str(cluster3)
nrow(cluster1)
nrow(cluster2)
nrow(cluster3)
nrow(cluster4)
nrow(cluster5)
nrow(cluster6)
nrow(cluster7)
tail(sort(colMeans(cluster1[-1])))
tail(sort(colMeans(cluster2[-1])))
tail(sort(colMeans(cluster3[-1])))
tail(sort(colMeans(cluster4[-1])))
tail(sort(colMeans(cluster5[-1])))
tail(sort(colMeans(cluste6[-1])))
tail(sort(colMeans(cluster6[-1])))
tail(sort(colMeans(cluster7[-1])))
set.seed(1000)
KMC=kmeans(dailykos[2:1546],centers=7)
str(KMC)
KMCcluster=KMC$cluster
kcluster1=subset(dailykos,KMCcluster==1)
kcluster2=subset(dailykos,KMCcluster==2)
kcluster3=subset(dailykos,KMCcluster==3)
kcluster4=subset(dailykos,KMCcluster==4)
kcluster5=subset(dailykos,KMCcluster==5)
kcluster6=subset(dailykos,KMCcluster==6)
kcluster7=subset(dailykos,KMCcluster==7)
nrow(kcluster1)
nrow(kcluster2)
nrow(kcluster3)
nrow(kcluster4)
nrow(kcluster5)
nrow(kcluster6)
nrow(kcluster7)
tail(sort(colMeans(kcluster1[-1])))
tail(sort(colMeans(kcluster2[-1])))
tail(sort(colMeans(kcluster3[-1])))
tail(sort(colMeans(kcluster4[-1])))
tail(sort(colMeans(kcluster5[-1])))
tail(sort(colMeans(kcluster6[-1])))
tail(sort(colMeans(kcluster7[-1])))
table(cluster1,kcluster2)
str(cluster1)
table(cluster1$Document,kcluster2$Document)
table(nrow(cluster1),nrow(kcluster2))
table(nrow(cluster2),nrow(kcluster2))
table(nrow(cluster3),nrow(kcluster2))
table(nrow(cluster4),nrow(kcluster2))
table(nrow(cluster5),nrow(kcluster2))
table(nrow(cluster6),nrow(kcluster2))
table(nrow(cluster7),nrow(kcluster2))
table(clusterGroups,KMC$cluster)
airlines=read.csv("AirlinesCluster.csv")
summary(airlines)
preproc = preProcess(airlines)
airlinesNorm = predict(preproc, airlines)
library(caret)
preproc = preProcess(airlines)
airlinesNorm = predict(preproc, airlines)
summary(airlinesnorm)
summary(airlinesNorm)
distance=dist(airlinesNorm,method="eucledian")
distance=dist(airlinesNorm,method="euclidean")
hierAirline=hclust(distance,method="ward")
nrow(airlinesNorm)
plot(hierAirline)
plot(hierAirline)
AirlineGroups=cutree(hierAirline,k=5)
subset(airlines,AirlineGroups==1)
nrow(subset(airlines,AirlineGroups==1))
tapply(airlines$Balance, clusterGroups, mean)
tapply(airlines$Balance, AirlineGroups, mean)
str(airlines)
tapply(airlines$QualMiles, AirlineGroups, mean)
tapply(airlines$BonusMiles, AirlineGroups, mean)
tapply(airlines$BonusTrans, AirlineGroups, mean)
tapply(airlines$FlightMiles, AirlineGroups, mean)
tapply(airlines$FlightTrans, AirlineGroups, mean)
tapply(airlines$DaysSinceEnroll, AirlineGroups, mean)
set.seed(88)
KMC=kmeans(airlinesNorm,centers=5,iter.max=1000)
table(KMC$cluster)
table(KMC$centers)
KMC$Centers
KMC$centers
claims=read.csv("reimbursements.csv")
claims=read.csv("reimbursement.csv")
str(claims)
table(claims)
table(claims$alzheimers)
table(claims$alzheimers,claims$arthritis,claims$cancer,claims$copd,claims$depression,claims$diabetes,claims$heart.failure,claims$ihd,claims$kidney,claims$osteoporosis,claims$stroke)
rowSums(claims[2:12])
sum(rowSums(claims[2:12])!=0)
str(claims)
280427/458005
?rowSums
cor(claims)
claims2=claims
claims2$reimbursement2008=NULL
claims2$reimbursement2009=NULL
str(claims2)
max(cor(claims2))
cor(claims2)
histogram(reimbursement2009)
histogram(claims$reimbursement2009)
claims$reimbursement2008 = log(claims$reimbursement2008+1)
claims$reimbursement2009 = log(claims$reimbursement2009+1)
histogram(claims$reimbursement2009)
nrow(claims$reimbursement2009)
claims$reimbursement2009==0
nrow(claims$reimbursement2009=0)
nrow(claims$reimbursement2009==0)
summary(reimbursement2009)
summary(claims$reimbursement2009)
subset(claims,claims$reimbursement2009==0)
tp=subset(claims,claims$reimbursement2009==0)
str(tp)
str(claims)
90498/458005
set.seed(144)
spl = sample(1:nrow(claims), size=0.7*nrow(claims))
train = claims[spl,]
test = claims[-spl,]
lm.claims=lm(reimbursement2009~.,data=claims)
summary(lm.claims)
lm.claims=lm(reimbursement2009~.,data=train)
summary(lm.claims)
lm.pred=predict(lm.claims,newdata=test)
SSE=sum((test$reimbursement2009-lm.pred)^2)
SST=sum((test$reimbursement2009-mean(train$reimbursement2009))^2)
1-SSE/SST
RMSE=sqrt(SSE/nrow(test))
RMSE
sqrt((mean(train$reimbursement2009)^2)/nrow(train))
sqrt((mean(train$reimbursement2009)^2)/nrow(test))
sqrt((mean(test$reimbursement2009)^2)/nrow(test))
SST
sqrt(SST/nrow(test))
SST2=sum((test$reimbursement2008-mean(train$reimbursement2008))^2)
sqrt(SST2/nrow(test))
SST2=sum((test$reimbursement2009-mean(train$reimbursement2008))^2)
sqrt(SST2/nrow(test))
train.limited = train
train.limited$reimbursement2009 = NULL
test.limited = test
test.limited$reimbursement2009 = NULL
preproc = preProcess(train.limited)
train.norm = predict(preproc, train.limited)
test.norm = predict(preproc, test.limited)
summary(train.norm)
summary(test.norm)
set.seed(144)
km=kmeans(train.norm,centers=3)
summary(km)
kcluster1=subset(train.norm,km$cluster==1)
kcluster2=subset(train.norm,km$cluster==2)
kcluster3=subset(train.norm,km$cluster==3)
summary(kcluster1)
summary(kcluster2)
summary(kcluster3)
install.packages("flexclust")
library(flexclust)
km.kcca = as.kcca(km, train.norm)
cluster.train = predict(km.kcca)
cluster.test = predict(km.kcca, newdata=test.norm)
cluster2=subset(test.norm,cluster.test==2)
str(cluster2)
train1=subset(train,km$cluster==1)
train2=subset(train,km$cluster==2)
train3=subset(train,km$cluster==3)
summary(train1)
summary(train2)
summary(train3)
lm1=lm(reimbursement2009~.,data=train1)
lm2=lm(reimbursement2009~.,data=train2)
lm3=lm(reimbursement2009~.,data=train3)
summary(lm1)
summary(lm2)
summary(lm3)
test1=subset(test,km$cluster==1)
test2=subset(test,km$cluster==2)
test3=subset(test,km$cluster==3)
pred.test1=predict(lm1,newdata=test1)
pred.test2=predict(lm1,newdata=test2)
pred.test3=predict(lm1,newdata=test3)
summary(pred.test1)
summary(pred.test2)
summary(pred.test3)
pred.test2=predict(lm2,newdata=test2)
pred.test3=predict(lm3,newdata=test3)
summary(pred.test1)
summary(pred.test2)
summary(pred.test3)
sqrt(mean((test1$reimbursement2009-pred.test1)^2))
sqrt(mean((test1$reimbursement2009 - predtest1)^2))
sqrt(mean((test1$reimbursement2009 - pred.test1)^2))
SSE=sum((test1$reimbursement2009-pred.test1)^2)
SSE
all.predictions = c(pred.test1, pred.test2, pred.test3)
all.outcomes = c(test1$reimbursement2009, test2$reimbursement2009, test3$reimbursement2009)
mean((all.outcomes-all.predictions)^2)
summary(test1)]
summary(test1)
train1=subset(train,cluster.train==1)
train2=subset(train,cluster.train==2)
train3=subset(train,cluster.train==3)
test1=subset(test,cluster.test==1)
test2=subset(test,cluster.test==2)
test3=subset(test,cluster.test==3)
lm1=lm(reimbursement2009~.,data=train1)
lm2=lm(reimbursement2009~.,data=train2)
lm3=lm(reimbursement2009~.,data=train3)
pred.test1=predict(lm1,newdata=test1)
pred.test2=predict(lm2,newdata=test2)
pred.test3=predict(lm3,newdata=test3)
s=pred.test1-test1$reimbursement2009
s
p=mean(s^2)
p
sqrt(p)
mean((pred.test2-test1$reimbursement2009)^2)
mean((pred.test2-test2$reimbursement2009)^2)
sqrt(mean((pred.test2-test2$reimbursement2009)^2))
sqrt(mean((pred.test3-test3$reimbursement2009)^2))
all.predictions = c(pred.test1, pred.test2, pred.test3)
all.outcomes = c(test1$reimbursement2009, test2$reimbursement2009, test3$reimbursement2009)
sqrt(mean((all.predictions-all.outcomes)^2))
